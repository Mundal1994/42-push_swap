./checker 4 7 8 3 9 1 0 10 5 6 2
pb
rra
pb
rr
ra
pb
ss
pb
rr
pb
rr
pa
pa
pa
pa
pa
OK




./checker -1 7 -7 -3 5 -2 0 2 -8
pb
sa
pb
ss
pb
ss
rra
pb
rrr
rrr
rrr
pa
sa
pa
pa
pa



ARG="4 67 3 87 23"; ./push_swap $ARG | wc -l

ARG="4 67 3 87 23"; ./push_swap $ARG | ./checker $ARG

ARG="2 0 1 3 4 5 6 7 8 9 10"; ./push_swap $ARG | wc -l

ARG="2 0 1 3 4 5 6 7 8 9 10"; ./push_swap $ARG | wc -l


./checker 4 "5 6" 7 8 9 "10 11"

./checker "1" 2 3 4 5 " -"

./checker "1" 2 3 4 5 "    "

./checker "1" 2 3 4 5 " "

./checker "1" 2 3 4 5 ""

ARG="2 -50 1 5 6 7 8 9 10 11 12 13"; ./push_swap $ARG | ./checker $ARG


ARG="2 -50 1 5 3 4 6 9 10 11 12 13"; ./push_swap $ARG | ./checker $ARG
ARG="2 -50 1 5 6 7 8 9 10 11 12 13"; ./push_swap $ARG | wc -l
       4




ARG="2 0 1 5 3 4 6 9 10 11 12 13"; ./push_swap $ARG | ./checker $ARG
OK
ARG="2 0 1 5 3 4 6 9 10 11 12 13"; ./push_swap $ARG | wc -l
      11

ARG="2 0 1 5 3 4 6 9 10 11 12 13"; ./push_swap $ARG | ./checker $ARG

ARG="2 0 1 5 3 4 6 9 10 11 12 13"; ./push_swap $ARG | wc -l


./checker 5 3 6 4 2 0 1
ra
pb
ra
pb
pb
rr
ra
pa
pa
pa
rra
rra
OK


./push_swap 1 3 2 4 5
rra
pb
pb
ss
pa
ra
pa

7



./checker -5 8 -6 9 -9 10 2 3 1 4 0 -4 5 -8
rra
pb
pb
rra
rra
pb
rra
pb
rra
rra
pb
rra
rra
rra
pb
rra
pb
rb
rra
rra
sa
ra
pa
ra
ra
pa
pa
pa
pa
rra
pa
pa

32



./checker 5 2 3 1 4
ARG="5 2 3 1 4"; ./push_swap $ARG | ./checker $ARG




./push_swap 1 4 2 3 6 5
ARG="1 4 2 3 6 5"; ./push_swap $ARG | ./checker $ARG


./push_swap 1 4 2 6 3 5
ARG="1 4 2 6 3 5"; ./push_swap $ARG | ./checker $ARG

./push_swap 1 4 2 6 3 5
ARG="1 4 2 6 3 5"; ./push_swap $ARG | ./checker $ARG
9

ARG="5 3 2 1 6 4"; ./push_swap $ARG

ARG="15 3 6 2 1 4 5 7 10 11 8 13 9 14"; ./push_swap $ARG
ARG="10 -3 2 -4 -8 -2 1 3 6 7 4 8 5 9"; ./push_swap $ARG


15 10
3  -3
6  2
2  -4
1  -8
4  -2
5  1
7  3
10 6
11 7
8  4
13 8
9  5
14 9


ARG="2 1 3 5 4 8 10 9 7 -50 -20 6"; ./push_swap $ARG | ./checker $ARG

ARG="30 20 4 10 -9 3 -7 50 22 100"; ./push_swap $ARG | ./checker $ARG


ARG="30 20 4 10 -10 11 12 31 50 3 100 5"; ./push_swap $ARG

ARG="7 6 1 3 -3 4 5 8 9 -2 10 2"; ./push_swap $ARG

ARG="253 31 277 141 44 76 110 281 109 60 289 238 280 117 269 275 175 245 69 47 8 177 230 89 178 190 294 217 25 32 148 161 191 288 138 149 265 176 49 193 164 263 201 272 113 129 179 260 37 7 158 28 105 130 72 189 115 212 142 168 123 284 157 194 204 88 209 151 84 19 199 218 107 125 247 262 233 215 98 59 55 271 159 283 299 132 259 39 36 184 134 100 112 71 101 10 296 99 172 162"; ./push_swap $ARG



3 4 2 1 5








ARG="6 5 8 7 1 9 4 2 3 10"; ./push_swap $ARG


new method
22


ARG="9 8 2 7 10 3 4 5 6 1"; ./push_swap $ARG
22



biggest of the two top numbers becomes the number we sort around
everything bigger than that number will be pushed to the right unless bottom number is bigger




ARG="2 3 1 7 9 8 4 10 6 5"; ./push_swap $ARG

29

25


34

28


21







ARG="8 7 3 10 5 2 6 1 4 9"; ./push_swap $ARG


find middle and split in half - anything below the number goes to other stack
25



choose number - sort around it
24


old method
